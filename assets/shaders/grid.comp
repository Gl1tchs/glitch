#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(rgba16f, set = 0, binding = 0) uniform image2D image;
layout(rgba16f, set = 0, binding = 1) readonly uniform image2D positions;

layout(set = 1, binding = 0) uniform ComputeUB {
    float dt;
} compute_ub;

void main() {
    ivec2 texel_coord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(image);

    vec4 pixel = imageLoad(image, texel_coord);
    vec4 pos_pix = imageLoad(positions, texel_coord);

    vec4 color = pos_pix + pixel;

    // Store the result in the image
    imageStore(image, texel_coord, color);
}
